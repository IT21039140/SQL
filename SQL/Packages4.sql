create or replace PACKAGE AUDIT_SUMMERY_PACK AS 

  FUNCTION UPDATE_AUDIT_REPORT_SUMMERY(
    i_main_case_id IN NUMBER,
    i_exit_meeting_date IN TIMESTAMP,
    i_draft_report_issued_date IN TIMESTAMP,
    i_response_date IN TIMESTAMP,
    i_response_receive_date IN TIMESTAMP,
    i_final_report_issued_date IN TIMESTAMP,
    i_reviewer1 IN VARCHAR2,
    i_reviewer2 IN VARCHAR2,
    i_reviewer3 IN VARCHAR2,
    i_reviewer4 IN VARCHAR2,
    i_reviewer5 IN VARCHAR2,
    i_examiner1 IN VARCHAR2,
    i_examiner2 IN VARCHAR2,
    i_examiner3 IN VARCHAR2,
    i_examiner4 IN VARCHAR2,
    i_examiner5 IN VARCHAR2,
    i_examiner6 IN VARCHAR2,
    i_br_manager IN VARCHAR2,
    i_asst_manager IN VARCHAR2,
    i_staff_str1 IN VARCHAR2,
    i_staff_str2 IN VARCHAR2,
    i_staff_str3 IN VARCHAR2,
    i_staff_str4 IN VARCHAR2,
    i_staff_str5 IN VARCHAR2,
    i_added_user IN VARCHAR2,
    i_added_user_div IN VARCHAR2,
    i_added_user_level IN VARCHAR2,
    i_added_date IN TIMESTAMP
) RETURN VARCHAR2;
  /* TODO enter package declarations (types, exceptions, methods etc) here */ 

END AUDIT_SUMMERY_PACK;
/
CREATE OR REPLACE PACKAGE BODY AUDIT_SUMMERY_PACK AS

    FUNCTION UPDATE_AUDIT_REPORT_SUMMERY(
    i_main_case_id IN NUMBER,
    i_exit_meeting_date IN TIMESTAMP,
    i_draft_report_issued_date IN TIMESTAMP,
    i_response_date IN TIMESTAMP,
    i_response_receive_date IN TIMESTAMP,
    i_final_report_issued_date IN TIMESTAMP,
    i_reviewer1 IN VARCHAR2,
    i_reviewer2 IN VARCHAR2,
    i_reviewer3 IN VARCHAR2,
    i_reviewer4 IN VARCHAR2,
    i_reviewer5 IN VARCHAR2,
    i_examiner1 IN VARCHAR2,
    i_examiner2 IN VARCHAR2,
    i_examiner3 IN VARCHAR2,
    i_examiner4 IN VARCHAR2,
    i_examiner5 IN VARCHAR2,
    i_examiner6 IN VARCHAR2,
    i_br_manager IN VARCHAR2,
    i_asst_manager IN VARCHAR2,
    i_staff_str1 IN VARCHAR2,
    i_staff_str2 IN VARCHAR2,
    i_staff_str3 IN VARCHAR2,
    i_staff_str4 IN VARCHAR2,
    i_staff_str5 IN VARCHAR2,
    i_added_user IN VARCHAR2,
    i_added_user_div IN VARCHAR2,
    i_added_user_level IN VARCHAR2,
    i_added_date IN TIMESTAMP
    ) RETURN VARCHAR2 IS
    BEGIN
        UPDATE AUDIT_REPORT_SUMMARY
        SET
            EXIT_MEETING_DATE = i_exit_meeting_date, 
            DRAFT_REPORT_ISSUED_DATE = i_draft_report_issued_date, 
            RESPONSE_DATE = i_response_date, 
            RESPONSE_RECEIVE_DATE = i_response_receive_date, 
            FINAL_REPORT_ISSUED_DATE = i_final_report_issued_date, 
            
            REVIEWER1 = i_reviewer1, 
            REVIEWER2 = i_reviewer2, 
            REVIEWER3 = i_reviewer3, 
            REVIEWER4 = i_reviewer4, 
            REVIEWER5 = i_reviewer5, 
            
            EXAMINER1 = i_examiner1, 
            EXAMINER2 = i_examiner2, 
            EXAMINER3 = i_examiner3, 
            EXAMINER4 = i_examiner4, 
            EXAMINER5 = i_examiner5, 
            EXAMINER6 = i_examiner6, 
            
            BR_MANAGER = i_br_manager, 
            ASST_MANAGER = i_asst_manager, 
            
            STAFF_STR1 = i_staff_str1, 
            STAFF_STR2 = i_staff_str2, 
            STAFF_STR3 = i_staff_str3, 
            STAFF_STR4 = i_staff_str4, 
            STAFF_STR5 = i_staff_str5, 
            
            ADDED_USER = i_added_user, 
            ADDED_USER_DIV = i_added_user_div, 
            ADDED_USER_LEVEL = i_added_user_level, 
            ADDED_DATE = i_added_date
            
        WHERE MAIN_CASE_ID = i_main_case_id;
        
--        commit;

        IF SQL%ROWCOUNT > 0 THEN
            commit;
            RETURN 'Success';
        ELSE
            RETURN 'Fail';
        END IF;

    EXCEPTION
        WHEN OTHERS THEN
            RETURN 'Error occurred: ' || SQLERRM;
    END UPDATE_AUDIT_REPORT_SUMMERY;

END AUDIT_SUMMERY_PACK;
/
create or replace PACKAGE INSIDENT_LIST_PACK AS-- newly created on 14/12/23
     FUNCTION GET_INCIDENT_LIST_BY_CHILD_CASE_ID (I_main_case_id IN NUMBER, I_child_case_id IN NUMBER) RETURN AUDIT_INSIDENT_TYPE_LIST;
--     FUNCTION GET_INCIDENT_LIST_BY_CHILD_CASE_ID (I_main_case_id IN NUMBER, I_child_case_id IN NUMBER) RETURN AUDIT_INSIDENT_TYPE_LIST;
     FUNCTION VIEW_INCIDENT(I_main_case_id IN NUMBER, I_child_case_id NUMBER,I_incident_id IN NUMBER) RETURN AUDIT_INSIDENT_TYPE_LIST;
     FUNCTION GET_BRANCH_COMMENT_DETAILS (I_main_case_id IN NUMBER, I_child_case_id IN NUMBER,I_incident_id IN NUMBER) RETURN BRANCH_COMMENT_TYPE_LIST;
--     FUNCTION UPDATE_FOLLOW_ACTION_DATA(f_rectified IN NUMBER, f_rec_date IN VARCHAR2,f_target_date IN VARCHAR2,f_res_officer IN VARCHAR2, i_id IN NUMBER)RETURN VARCHAR2;

    FUNCTION GET_INCIDENT_LIST_BY_CHILD_CASE_ID_USER_ID(I_main_case_id IN NUMBER, I_child_case_id IN NUMBER, I_current_assigned_user IN VARCHAR2) RETURN AUDIT_INSIDENT_TYPE_LIST;

FUNCTION UPDATE_AUDIT_INCIDENT(
    p_rectified IN AUDIT_INCIDENT_TBL.FOLLOW_UP_RECTIFIED%TYPE,
    p_rectified_date IN VARCHAR2,
    p_target_date IN VARCHAR2,
    p_responsible_officer IN AUDIT_INCIDENT_TBL.FOLLOW_UP_RESPONSIBLE_OFFICER%TYPE,
    p_br_comment IN AUDIT_INCIDENT_TBL.BR_COMMENT%TYPE,
    p_incident_id IN AUDIT_INCIDENT_TBL.INCIDENT_ID%TYPE
) RETURN VARCHAR2;

FUNCTION UPDATE_AUDIT_INCIDENT_BR(
    P_agreed_with_audit IN AUDIT_INCIDENT_TBL.AGREE_WITH_AUDIT%TYPE,
    p_rectified IN AUDIT_INCIDENT_TBL.FOLLOW_UP_RECTIFIED%TYPE,
    p_rectified_date IN VARCHAR2,
    p_target_date IN VARCHAR2,
    p_responsible_officer IN AUDIT_INCIDENT_TBL.FOLLOW_UP_RESPONSIBLE_OFFICER%TYPE,
    p_br_comment IN AUDIT_INCIDENT_TBL.BR_COMMENT%TYPE,
    p_incident_id IN AUDIT_INCIDENT_TBL.INCIDENT_ID%TYPE
) RETURN VARCHAR2;
     --FUNCTION GET_FUR_BR_FLU_COMMENTS(I_main_case_id IN NUMBER,I_child_case_id IN NUMBER, I_incident_id IN NUMBER)RETURN FR_BR_FUL_COMMENT_TYPE_LIST;
   END  INSIDENT_LIST_PACK;
/

create or replace PACKAGE BODY INSIDENT_LIST_PACK AS
  FUNCTION GET_INCIDENT_LIST_BY_CHILD_CASE_ID (I_main_case_id IN NUMBER, I_child_case_id IN NUMBER) RETURN AUDIT_INSIDENT_TYPE_LIST AS
    CURSOR MAIN_CUR IS 
    SELECT i.MAIN_CASE_ID,
        i.CHILD_CASE_ID, 
        i.INCIDENT_ID  , 
        i.AUDIT_STATUS , 
        i.IMPACT , 
        i.LIKELIHOOD , 
        i.OVERALL_RISK , 
        i.SAMPLE_COUNT , 
        i.ISSUE_COUNT , 
        i.POTENTIAL_IMPACT, 
        i.RECOMMENDATION , 
        i.ROOT_CAUSE , 
        i.DETAILS_ROOT_CAUSE , 
        i.AGREE_WITH_AUDIT, 
        i.RESPONSIBLE_OFFICER , 
        i.RECTIFIED , 
        i.RECTIFY_DATE , 
        i.COMMENT_HEADING ,	 
        i.LAST_NODE1 , 
        i.LAST_NODE_ORDER1 , 
        i.LAST_NODE2 , 
        i.LAST_NODE_ORDER2 , 
        i.LAST_NODE3 , 
        i.LAST_NODE_ORDER3 , 
        i.LAST_NODE4 , 
        i.LAST_NODE_ORDER4 , 
        i.LAST_NODE5 , 
        i.LAST_NODE_ORDER5 , 
        i.INCIDENT_CREATED_USER , 
        i.INCIDENT_CURRENT_ASSIGNED_USER , 
        i.INCIDENT_CREATED_DIV , 
        i.INCIDENT_CURRENT_ASSIGNED_DIV , 
        i.HR , 
        i.POLICIES_AND_PROCEDURE , 
        i.PROCESS_AND_EXECUTION , 
        i.IT,
        i.PERFORMANCE_MEASUREMENT,
        i.INCIDENT_COMMENT,
        i.BR_COMMENT_FLAG,
        i.LAST_NODE_ID,
        i.LAST_NODE_ELEMENT_ORDER,
        i.OVERALL_INCIDENT_STATUS,
        i.FOLLOW_UP_RECTIFIED,
        i.FOLLOW_UP_RECTIFIED_DATE,
        i.FOLLOW_UP_TARGET_DATE,
        i.FOLLOW_UP_RESPONSIBLE_OFFICER,
        i.BR_COMMENT,
        i.FUR_COMMENT,
        i.FOLLOW_UP_COMMENT,
        i.TARGET_DATE,
        i.OVERALL_RISK_VALUE,
        c.CASE_CREATED_USER,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE1 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER1 ) AS LAST_NODE1_DESC, 
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE2 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER2 ) AS LAST_NODE2_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE3 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER3 ) AS LAST_NODE3_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE4 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER4 ) AS LAST_NODE4_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE5 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER5 ) AS LAST_NODE5_DESC
        from AUDIT_INCIDENT_TBL i , AUDIT_CASE_TBL c
       where i.MAIN_CASE_ID =I_main_case_id AND i.MAIN_CASE_ID = c.DOC_CASE_ID AND i.DEL_FLAG=0;
       
       CURSOR ALL_INCI_CUR1 IS 
        SELECT i.MAIN_CASE_ID,
        i.CHILD_CASE_ID, 
        i.INCIDENT_ID  , 
        i.AUDIT_STATUS , 
        i.IMPACT , 
        i.LIKELIHOOD , 
        i.OVERALL_RISK , 
        i.SAMPLE_COUNT , 
        i.ISSUE_COUNT , 
        i.POTENTIAL_IMPACT, 
        i.RECOMMENDATION , 
        i.ROOT_CAUSE , 
        i.DETAILS_ROOT_CAUSE , 
        i.AGREE_WITH_AUDIT, 
        i.RESPONSIBLE_OFFICER , 
        i.RECTIFIED , 
        i.RECTIFY_DATE , 
        i.COMMENT_HEADING ,	 
        i.LAST_NODE1 , 
        i.LAST_NODE_ORDER1 , 
        i.LAST_NODE2 , 
        i.LAST_NODE_ORDER2 , 
        i.LAST_NODE3 , 
        i.LAST_NODE_ORDER3 , 
        i.LAST_NODE4 , 
        i.LAST_NODE_ORDER4 , 
        i.LAST_NODE5 , 
        i.LAST_NODE_ORDER5 , 
        i.INCIDENT_CREATED_USER , 
        i.INCIDENT_CURRENT_ASSIGNED_USER , 
        i.INCIDENT_CREATED_DIV , 
        i.INCIDENT_CURRENT_ASSIGNED_DIV , 
        i.HR , 
        i.POLICIES_AND_PROCEDURE , 
        i.PROCESS_AND_EXECUTION , 
        i.IT,
        i.PERFORMANCE_MEASUREMENT,
        i.INCIDENT_COMMENT,
        i.BR_COMMENT_FLAG,
        i.LAST_NODE_ID,
        i.LAST_NODE_ELEMENT_ORDER,
        i.OVERALL_INCIDENT_STATUS,
        i.FOLLOW_UP_RECTIFIED,
        i.FOLLOW_UP_RECTIFIED_DATE,
        i.FOLLOW_UP_TARGET_DATE,
        i.FOLLOW_UP_RESPONSIBLE_OFFICER,
        i.BR_COMMENT,
        i.FUR_COMMENT,
        i.FOLLOW_UP_COMMENT,
        i.TARGET_DATE,
        i.OVERALL_RISK_VALUE,
        c.CASE_CREATED_USER,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE1 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER1 ) AS LAST_NODE1_DESC, 
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE2 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER2 ) AS LAST_NODE2_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE3 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER3 ) AS LAST_NODE3_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE4 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER4 ) AS LAST_NODE4_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE5 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER5 ) AS LAST_NODE5_DESC
        from AUDIT_INCIDENT_TBL i , AUDIT_CASE_TBL c 
       where i.MAIN_CASE_ID =I_main_case_id and i.CHILD_CASE_ID = I_child_case_id AND i.MAIN_CASE_ID = c.DOC_CASE_ID AND i.DEL_FLAG=0;
        
    AUDIT_INSIDENT_LIST AUDIT_INSIDENT_TYPE_LIST;
    AUDIT_INSIDENT AUDIT_INSIDENT_TYPE;
  BEGIN
      AUDIT_INSIDENT_LIST:=NEW AUDIT_INSIDENT_TYPE_LIST();
      IF(I_child_case_id = 0) THEN
        FOR MAIN_CUR_REC IN MAIN_CUR LOOP
        AUDIT_INSIDENT:= NEW  AUDIT_INSIDENT_TYPE(0,0,0,'','','','',0,0,'','','','',0,'',0,null,'',null,'','','','','','', '','','','','','',	'',	'',	0,0,0,0,0,'','','','','','',0,'','','',0,null,null,'',null,null,null,null,0.0);
        
        AUDIT_INSIDENT.MAIN_CASE_ID := MAIN_CUR_REC.MAIN_CASE_ID;
        AUDIT_INSIDENT.CHILD_CASE_ID := MAIN_CUR_REC.CHILD_CASE_ID;
        AUDIT_INSIDENT.INCIDENT_ID:=MAIN_CUR_REC.INCIDENT_ID;
        AUDIT_INSIDENT.AUDIT_STATUS:=MAIN_CUR_REC.AUDIT_STATUS;
        AUDIT_INSIDENT.IMPACT:=MAIN_CUR_REC.IMPACT;
        AUDIT_INSIDENT.LIKELIHOOD:=MAIN_CUR_REC.LIKELIHOOD;
        AUDIT_INSIDENT.OVERALL_RISK:=MAIN_CUR_REC.OVERALL_RISK;
        AUDIT_INSIDENT.SAMPLE_COUNT:=MAIN_CUR_REC.SAMPLE_COUNT;
        AUDIT_INSIDENT.ISSUE_COUNT:=MAIN_CUR_REC.ISSUE_COUNT;
        AUDIT_INSIDENT.POTENTIAL_IMPACT:=MAIN_CUR_REC.POTENTIAL_IMPACT;
        AUDIT_INSIDENT.RECOMMENDATION:=MAIN_CUR_REC.RECOMMENDATION;
        AUDIT_INSIDENT.ROOT_CAUSE:=MAIN_CUR_REC.ROOT_CAUSE;
        AUDIT_INSIDENT.DETAILS_ROOT_CAUSE:=MAIN_CUR_REC.DETAILS_ROOT_CAUSE;
        AUDIT_INSIDENT.AGREE_WITH_AUDIT:=MAIN_CUR_REC.AGREE_WITH_AUDIT;
        AUDIT_INSIDENT.RESPONSIBLE_OFFICER:=MAIN_CUR_REC.RESPONSIBLE_OFFICER;
        AUDIT_INSIDENT.RECTIFIED:=MAIN_CUR_REC.RECTIFIED;
        AUDIT_INSIDENT.RECTIFY_DATE:=MAIN_CUR_REC.RECTIFY_DATE;
        AUDIT_INSIDENT.COMMENT_HEADING:=MAIN_CUR_REC.COMMENT_HEADING;
        AUDIT_INSIDENT.LAST_NODE1:=MAIN_CUR_REC.LAST_NODE1;
        AUDIT_INSIDENT.LAST_NODE2:=MAIN_CUR_REC.LAST_NODE2;
        AUDIT_INSIDENT.LAST_NODE3:=MAIN_CUR_REC.LAST_NODE3;
        AUDIT_INSIDENT.LAST_NODE4:=MAIN_CUR_REC.LAST_NODE4;
        AUDIT_INSIDENT.LAST_NODE5:=MAIN_CUR_REC.LAST_NODE5;
        AUDIT_INSIDENT.LAST_NODE_ORDER1:=MAIN_CUR_REC.LAST_NODE_ORDER1;
        AUDIT_INSIDENT.LAST_NODE_ORDER2:=MAIN_CUR_REC.LAST_NODE_ORDER2;
        AUDIT_INSIDENT.LAST_NODE_ORDER3:=MAIN_CUR_REC.LAST_NODE_ORDER3;
        AUDIT_INSIDENT.LAST_NODE_ORDER4:=MAIN_CUR_REC.LAST_NODE_ORDER4;
        AUDIT_INSIDENT.LAST_NODE_ORDER5:=MAIN_CUR_REC.LAST_NODE_ORDER5;
        AUDIT_INSIDENT.INCIDENT_CREATED_USER:=MAIN_CUR_REC.INCIDENT_CREATED_USER;
        AUDIT_INSIDENT.INCIDENT_CURRENT_ASSIGNED_USER:=MAIN_CUR_REC.INCIDENT_CURRENT_ASSIGNED_USER;
        AUDIT_INSIDENT.INCIDENT_CREATED_DIV:=MAIN_CUR_REC.INCIDENT_CREATED_DIV;
        AUDIT_INSIDENT.INCIDENT_CURRENT_ASSIGNED_DIV:=MAIN_CUR_REC.INCIDENT_CURRENT_ASSIGNED_DIV;
        AUDIT_INSIDENT.HR:=MAIN_CUR_REC.HR;
        AUDIT_INSIDENT.POLICIES_AND_PROCEDURE:=MAIN_CUR_REC.POLICIES_AND_PROCEDURE;
        AUDIT_INSIDENT.PROCESS_AND_EXECUTION:=MAIN_CUR_REC.PROCESS_AND_EXECUTION;
        AUDIT_INSIDENT.IT:=MAIN_CUR_REC.IT;
        AUDIT_INSIDENT.PERFORMANCE_MEASUREMENT:=MAIN_CUR_REC.PERFORMANCE_MEASUREMENT;
        AUDIT_INSIDENT.NODE_DESCRIPTION1 := MAIN_CUR_REC.LAST_NODE1_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION2 := MAIN_CUR_REC.LAST_NODE2_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION3 := MAIN_CUR_REC.LAST_NODE3_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION4 := MAIN_CUR_REC.LAST_NODE4_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION5 := MAIN_CUR_REC.LAST_NODE5_DESC;
        AUDIT_INSIDENT.INCIDENT_COMMENT := MAIN_CUR_REC.INCIDENT_COMMENT;
        AUDIT_INSIDENT.CASE_CREATED_USER := MAIN_CUR_REC.CASE_CREATED_USER;
        AUDIT_INSIDENT.BR_COMMENT_FLAG := MAIN_CUR_REC.BR_COMMENT_FLAG;
        AUDIT_INSIDENT.LAST_NODE_ID := MAIN_CUR_REC.LAST_NODE_ID;
        AUDIT_INSIDENT.LAST_NODE_ELEMENT_ORDER := MAIN_CUR_REC.LAST_NODE_ELEMENT_ORDER;
        AUDIT_INSIDENT.OVERALL_INCIDENT_STATUS:=MAIN_CUR_REC.OVERALL_INCIDENT_STATUS;
        
        AUDIT_INSIDENT.TARGET_DATE:=MAIN_CUR_REC.TARGET_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_RECTIFIED:=MAIN_CUR_REC.FOLLOW_UP_RECTIFIED;
        AUDIT_INSIDENT.FOLLOW_UP_RECTIFIED_DATE:=MAIN_CUR_REC.FOLLOW_UP_RECTIFIED_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_TARGET_DATE:=MAIN_CUR_REC.FOLLOW_UP_TARGET_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_RESPONSIBLE_OFFICER:=MAIN_CUR_REC.FOLLOW_UP_RESPONSIBLE_OFFICER;
        AUDIT_INSIDENT.BR_COMMENT:=MAIN_CUR_REC.BR_COMMENT;
        AUDIT_INSIDENT.FUR_COMMENT:=MAIN_CUR_REC.FUR_COMMENT;
        AUDIT_INSIDENT.FOLLOW_UP_COMMENT:=MAIN_CUR_REC.FOLLOW_UP_COMMENT;
--        AUDIT_INCIDENT
       
        AUDIT_INSIDENT_LIST.EXTEND;
        AUDIT_INSIDENT_LIST(AUDIT_INSIDENT_LIST.LAST):=AUDIT_INSIDENT;
      END LOOP;
      
      ELSE
        FOR ALL_INCI_CUR_REC1 IN ALL_INCI_CUR1 LOOP
        AUDIT_INSIDENT:= NEW  AUDIT_INSIDENT_TYPE(0,0,0,'','','','',0,0,'','','','',0,'',0,null,'',null,'','','','','','', '','','','','','',	'',	'',	0,0,0,0,0,'','','','','','',0,'','','',0,null,null,'',null,null,null,null,0.0);
       
        AUDIT_INSIDENT.MAIN_CASE_ID := ALL_INCI_CUR_REC1.MAIN_CASE_ID;
        AUDIT_INSIDENT.CHILD_CASE_ID := ALL_INCI_CUR_REC1.CHILD_CASE_ID;
        AUDIT_INSIDENT.INCIDENT_ID:=ALL_INCI_CUR_REC1.INCIDENT_ID;
        AUDIT_INSIDENT.AUDIT_STATUS:=ALL_INCI_CUR_REC1.AUDIT_STATUS;
        AUDIT_INSIDENT.IMPACT:=ALL_INCI_CUR_REC1.IMPACT;
        AUDIT_INSIDENT.LIKELIHOOD:=ALL_INCI_CUR_REC1.LIKELIHOOD;
        AUDIT_INSIDENT.OVERALL_RISK:=ALL_INCI_CUR_REC1.OVERALL_RISK;
        AUDIT_INSIDENT.SAMPLE_COUNT:=ALL_INCI_CUR_REC1.SAMPLE_COUNT;
        AUDIT_INSIDENT.ISSUE_COUNT:=ALL_INCI_CUR_REC1.ISSUE_COUNT;
        AUDIT_INSIDENT.POTENTIAL_IMPACT:=ALL_INCI_CUR_REC1.POTENTIAL_IMPACT;
        AUDIT_INSIDENT.RECOMMENDATION:=ALL_INCI_CUR_REC1.RECOMMENDATION;
        AUDIT_INSIDENT.ROOT_CAUSE:=ALL_INCI_CUR_REC1.ROOT_CAUSE;
        AUDIT_INSIDENT.DETAILS_ROOT_CAUSE:=ALL_INCI_CUR_REC1.DETAILS_ROOT_CAUSE;
        AUDIT_INSIDENT.AGREE_WITH_AUDIT:=ALL_INCI_CUR_REC1.AGREE_WITH_AUDIT;
        AUDIT_INSIDENT.RESPONSIBLE_OFFICER:=ALL_INCI_CUR_REC1.RESPONSIBLE_OFFICER;
        AUDIT_INSIDENT.RECTIFIED:=ALL_INCI_CUR_REC1.RECTIFIED;
        AUDIT_INSIDENT.RECTIFY_DATE:=ALL_INCI_CUR_REC1.RECTIFY_DATE;
        AUDIT_INSIDENT.COMMENT_HEADING:=ALL_INCI_CUR_REC1.COMMENT_HEADING;
        AUDIT_INSIDENT.LAST_NODE1:=ALL_INCI_CUR_REC1.LAST_NODE1;
        AUDIT_INSIDENT.LAST_NODE2:=ALL_INCI_CUR_REC1.LAST_NODE2;
        AUDIT_INSIDENT.LAST_NODE3:=ALL_INCI_CUR_REC1.LAST_NODE3;
        AUDIT_INSIDENT.LAST_NODE4:=ALL_INCI_CUR_REC1.LAST_NODE4;
        AUDIT_INSIDENT.LAST_NODE5:=ALL_INCI_CUR_REC1.LAST_NODE5;
        AUDIT_INSIDENT.LAST_NODE_ORDER1:=ALL_INCI_CUR_REC1.LAST_NODE_ORDER1;
        AUDIT_INSIDENT.LAST_NODE_ORDER2:=ALL_INCI_CUR_REC1.LAST_NODE_ORDER2;
        AUDIT_INSIDENT.LAST_NODE_ORDER3:=ALL_INCI_CUR_REC1.LAST_NODE_ORDER3;
        AUDIT_INSIDENT.LAST_NODE_ORDER4:=ALL_INCI_CUR_REC1.LAST_NODE_ORDER4;
        AUDIT_INSIDENT.LAST_NODE_ORDER5:=ALL_INCI_CUR_REC1.LAST_NODE_ORDER5;
        AUDIT_INSIDENT.INCIDENT_CREATED_USER:=ALL_INCI_CUR_REC1.INCIDENT_CREATED_USER;
        AUDIT_INSIDENT.INCIDENT_CURRENT_ASSIGNED_USER:=ALL_INCI_CUR_REC1.INCIDENT_CURRENT_ASSIGNED_USER;
        AUDIT_INSIDENT.INCIDENT_CREATED_DIV:=ALL_INCI_CUR_REC1.INCIDENT_CREATED_DIV;
        AUDIT_INSIDENT.INCIDENT_CURRENT_ASSIGNED_DIV:=ALL_INCI_CUR_REC1.INCIDENT_CURRENT_ASSIGNED_DIV;
        AUDIT_INSIDENT.HR:=ALL_INCI_CUR_REC1.HR;
        AUDIT_INSIDENT.POLICIES_AND_PROCEDURE:=ALL_INCI_CUR_REC1.POLICIES_AND_PROCEDURE;
        AUDIT_INSIDENT.PROCESS_AND_EXECUTION:=ALL_INCI_CUR_REC1.PROCESS_AND_EXECUTION;
        AUDIT_INSIDENT.IT:=ALL_INCI_CUR_REC1.IT;
        AUDIT_INSIDENT.PERFORMANCE_MEASUREMENT:=ALL_INCI_CUR_REC1.PERFORMANCE_MEASUREMENT;
        AUDIT_INSIDENT.NODE_DESCRIPTION1 := ALL_INCI_CUR_REC1.LAST_NODE1_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION2 := ALL_INCI_CUR_REC1.LAST_NODE2_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION3 := ALL_INCI_CUR_REC1.LAST_NODE3_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION4 := ALL_INCI_CUR_REC1.LAST_NODE4_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION5 := ALL_INCI_CUR_REC1.LAST_NODE5_DESC;
        AUDIT_INSIDENT.INCIDENT_COMMENT := ALL_INCI_CUR_REC1.INCIDENT_COMMENT;
        AUDIT_INSIDENT.CASE_CREATED_USER := ALL_INCI_CUR_REC1.CASE_CREATED_USER;
        AUDIT_INSIDENT.BR_COMMENT_FLAG := ALL_INCI_CUR_REC1.BR_COMMENT_FLAG;
        AUDIT_INSIDENT.LAST_NODE_ID := ALL_INCI_CUR_REC1.LAST_NODE_ID;
        AUDIT_INSIDENT.LAST_NODE_ELEMENT_ORDER := ALL_INCI_CUR_REC1.LAST_NODE_ELEMENT_ORDER;
        AUDIT_INSIDENT.OVERALL_INCIDENT_STATUS:=ALL_INCI_CUR_REC1.OVERALL_INCIDENT_STATUS;
        
        AUDIT_INSIDENT.TARGET_DATE:=ALL_INCI_CUR_REC1.TARGET_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_RECTIFIED:=ALL_INCI_CUR_REC1.FOLLOW_UP_RECTIFIED;
        AUDIT_INSIDENT.FOLLOW_UP_RECTIFIED_DATE:=ALL_INCI_CUR_REC1.FOLLOW_UP_RECTIFIED_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_TARGET_DATE:=ALL_INCI_CUR_REC1.FOLLOW_UP_TARGET_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_RESPONSIBLE_OFFICER:=ALL_INCI_CUR_REC1.FOLLOW_UP_RESPONSIBLE_OFFICER;
        AUDIT_INSIDENT.BR_COMMENT:=ALL_INCI_CUR_REC1.BR_COMMENT;
        AUDIT_INSIDENT.FUR_COMMENT:=ALL_INCI_CUR_REC1.FUR_COMMENT;
        AUDIT_INSIDENT.FOLLOW_UP_COMMENT:=ALL_INCI_CUR_REC1.FOLLOW_UP_COMMENT;
        
        AUDIT_INSIDENT_LIST.EXTEND;
        AUDIT_INSIDENT_LIST(AUDIT_INSIDENT_LIST.LAST):=AUDIT_INSIDENT;
      END LOOP;
      END IF;
      
    
    RETURN AUDIT_INSIDENT_LIST;
  END GET_INCIDENT_LIST_BY_CHILD_CASE_ID;
  
FUNCTION VIEW_INCIDENT (I_main_case_id IN NUMBER, I_child_case_id NUMBER,I_incident_id IN NUMBER) RETURN AUDIT_INSIDENT_TYPE_LIST AS
    CURSOR MAIN_CUR IS
    
    SELECT MAIN_CASE_ID,CHILD_CASE_ID,INCIDENT_ID,AUDIT_STATUS,IMPACT,LIKELIHOOD,OVERALL_RISK,SAMPLE_COUNT,ISSUE_COUNT,POTENTIAL_IMPACT,RECOMMENDATION,ROOT_CAUSE,DETAILS_ROOT_CAUSE,AGREE_WITH_AUDIT,
    RESPONSIBLE_OFFICER,RECTIFIED,RECTIFY_DATE,COMMENT_HEADING,INCIDENT_COMMENT,INCIDENT_CREATED_USER,INCIDENT_CURRENT_ASSIGNED_USER,INCIDENT_CREATED_DIV,INCIDENT_CURRENT_ASSIGNED_DIV,HR,
    POLICIES_AND_PROCEDURE,PROCESS_AND_EXECUTION,IT,PERFORMANCE_MEASUREMENT,LAST_NODE1,LAST_NODE_ORDER1,LAST_NODE2,LAST_NODE_ORDER2,LAST_NODE3,LAST_NODE_ORDER3,
    LAST_NODE4,LAST_NODE_ORDER4,LAST_NODE5,LAST_NODE_ORDER5,LAST_NODE_ID,LAST_NODE_ELEMENT_ORDER,OVERALL_INCIDENT_STATUS,FOLLOW_UP_RECTIFIED,FOLLOW_UP_RECTIFIED_DATE,FOLLOW_UP_TARGET_DATE,FOLLOW_UP_RESPONSIBLE_OFFICER,TARGET_DATE,BR_COMMENT,FUR_COMMENT,FOLLOW_UP_COMMENT,OVERALL_RISK_VALUE,
    (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = LAST_NODE1 
        AND c.NODE_ELEMENT_ORDER = LAST_NODE_ORDER1 ) AS LAST_NODE1_DESC, 
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = LAST_NODE2 
        AND c.NODE_ELEMENT_ORDER = LAST_NODE_ORDER2 ) AS LAST_NODE2_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = LAST_NODE3 
        AND c.NODE_ELEMENT_ORDER = LAST_NODE_ORDER3 ) AS LAST_NODE3_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = LAST_NODE4 
        AND c.NODE_ELEMENT_ORDER = LAST_NODE_ORDER4 ) AS LAST_NODE4_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = LAST_NODE5 
        AND c.NODE_ELEMENT_ORDER = LAST_NODE_ORDER5 ) AS LAST_NODE5_DESC
    FROM AUDIT_INCIDENT_TBL
    WHERE MAIN_CASE_ID= I_main_case_id AND CHILD_CASE_ID=I_child_case_id AND INCIDENT_ID=I_incident_id AND DEL_FLAG !=1;
    
    il AUDIT_INSIDENT_TYPE_LIST;
    it AUDIT_INSIDENT_TYPE;
    
    BEGIN
    
    il:=NEW AUDIT_INSIDENT_TYPE_LIST();
   
      FOR MAIN_CUR_REC IN MAIN_CUR LOOP
      it:= NEW  AUDIT_INSIDENT_TYPE(0,0,0,'','','','',0,0,'','','','',0,'',0,null,'',null,'','','','','','', '','','','','','',	'',	'',	0,0,0,0,0,'','','','','','',0,'','','',0,null,null,'',null,null,null,null,0.0);
      
        it.MAIN_CASE_ID := MAIN_CUR_REC.MAIN_CASE_ID;
        it.CHILD_CASE_ID := MAIN_CUR_REC.CHILD_CASE_ID;
        it.INCIDENT_ID:=MAIN_CUR_REC.INCIDENT_ID;
        it.AUDIT_STATUS:=MAIN_CUR_REC.AUDIT_STATUS;
        it.IMPACT:=MAIN_CUR_REC.IMPACT;
        it.LIKELIHOOD:=MAIN_CUR_REC.LIKELIHOOD;
        it.OVERALL_RISK:=MAIN_CUR_REC.OVERALL_RISK;
        it.SAMPLE_COUNT:=MAIN_CUR_REC.SAMPLE_COUNT;
        it.ISSUE_COUNT:=MAIN_CUR_REC.ISSUE_COUNT;
        it.POTENTIAL_IMPACT:=MAIN_CUR_REC.POTENTIAL_IMPACT;
        it.RECOMMENDATION:=MAIN_CUR_REC.RECOMMENDATION;
        it.ROOT_CAUSE:=MAIN_CUR_REC.ROOT_CAUSE;
        it.DETAILS_ROOT_CAUSE:=MAIN_CUR_REC.DETAILS_ROOT_CAUSE;
        it.AGREE_WITH_AUDIT:=MAIN_CUR_REC.AGREE_WITH_AUDIT;
        it.RESPONSIBLE_OFFICER:=MAIN_CUR_REC.RESPONSIBLE_OFFICER;
        it.RECTIFIED:=MAIN_CUR_REC.RECTIFIED;
        it.RECTIFY_DATE:=MAIN_CUR_REC.RECTIFY_DATE;
        it.COMMENT_HEADING:=MAIN_CUR_REC.COMMENT_HEADING;
        it.LAST_NODE1:=MAIN_CUR_REC.LAST_NODE1;
        it.LAST_NODE2:=MAIN_CUR_REC.LAST_NODE2;
        it.LAST_NODE3:=MAIN_CUR_REC.LAST_NODE3;
        it.LAST_NODE4:=MAIN_CUR_REC.LAST_NODE4;
        it.LAST_NODE5:=MAIN_CUR_REC.LAST_NODE5;
        it.LAST_NODE_ORDER1:=MAIN_CUR_REC.LAST_NODE_ORDER1;
        it.LAST_NODE_ORDER2:=MAIN_CUR_REC.LAST_NODE_ORDER2;
        it.LAST_NODE_ORDER3:=MAIN_CUR_REC.LAST_NODE_ORDER3;
        it.LAST_NODE_ORDER4:=MAIN_CUR_REC.LAST_NODE_ORDER4;
        it.LAST_NODE_ORDER5:=MAIN_CUR_REC.LAST_NODE_ORDER5;
        it.INCIDENT_CREATED_USER:=MAIN_CUR_REC.INCIDENT_CREATED_USER;
        it.INCIDENT_CURRENT_ASSIGNED_USER:=MAIN_CUR_REC.INCIDENT_CURRENT_ASSIGNED_USER;
        it.INCIDENT_CREATED_DIV:=MAIN_CUR_REC.INCIDENT_CREATED_DIV;
        it.INCIDENT_CURRENT_ASSIGNED_DIV:=MAIN_CUR_REC.INCIDENT_CURRENT_ASSIGNED_DIV;
        it.HR:=MAIN_CUR_REC.HR;
        it.POLICIES_AND_PROCEDURE:=MAIN_CUR_REC.POLICIES_AND_PROCEDURE;
        it.PROCESS_AND_EXECUTION:=MAIN_CUR_REC.PROCESS_AND_EXECUTION;
        it.IT:=MAIN_CUR_REC.IT;
        it.PERFORMANCE_MEASUREMENT:=MAIN_CUR_REC.PERFORMANCE_MEASUREMENT;
        it.NODE_DESCRIPTION1 := MAIN_CUR_REC.LAST_NODE1_DESC;
        it.NODE_DESCRIPTION2 := MAIN_CUR_REC.LAST_NODE2_DESC;
        it.NODE_DESCRIPTION3 := MAIN_CUR_REC.LAST_NODE3_DESC;
        it.NODE_DESCRIPTION4 := MAIN_CUR_REC.LAST_NODE4_DESC;
        it.NODE_DESCRIPTION5 := MAIN_CUR_REC.LAST_NODE5_DESC;
        it.INCIDENT_COMMENT := MAIN_CUR_REC.INCIDENT_COMMENT;
        it.LAST_NODE_ID := MAIN_CUR_REC.LAST_NODE_ID;
        it.LAST_NODE_ELEMENT_ORDER := MAIN_CUR_REC.LAST_NODE_ELEMENT_ORDER;
        it.OVERALL_INCIDENT_STATUS:=MAIN_CUR_REC.OVERALL_INCIDENT_STATUS;
        it.FOLLOW_UP_RECTIFIED := MAIN_CUR_REC.FOLLOW_UP_RECTIFIED;
        it.FOLLOW_UP_RECTIFIED_DATE :=MAIN_CUR_REC.FOLLOW_UP_RECTIFIED_DATE;
        it.FOLLOW_UP_TARGET_DATE := MAIN_CUR_REC.FOLLOW_UP_TARGET_DATE;
        it.FOLLOW_UP_RESPONSIBLE_OFFICER :=MAIN_CUR_REC.FOLLOW_UP_RESPONSIBLE_OFFICER;
        it.TARGET_DATE:=MAIN_CUR_REC.TARGET_DATE;
        it.BR_COMMENT:=MAIN_CUR_REC.BR_COMMENT;
        it.FUR_COMMENT:=MAIN_CUR_REC.FUR_COMMENT;
        it.FOLLOW_UP_COMMENT:=MAIN_CUR_REC.FOLLOW_UP_COMMENT;
        it.OVERALL_RISK_VALUE:=MAIN_CUR_REC.OVERALL_RISK_VALUE;
        
        il.EXTEND;
        il(il.LAST):=it;
      END LOOP;
  
  RETURN il;
  END VIEW_INCIDENT;
  
   FUNCTION GET_BRANCH_COMMENT_DETAILS (I_main_case_id IN NUMBER, I_child_case_id IN NUMBER,I_incident_id IN NUMBER) RETURN BRANCH_COMMENT_TYPE_LIST AS
    CURSOR MAIN_CUR IS
    SELECT MAIN_CASE_ID,CHILD_CASE_ID,INSIDENT_ID, INSIDENT_COMMENT,AGREE_WITH_AUDIT,RESPONSIBLE_OFFICER,RECTIFIED,RECTIFY_DATE,TARGET_DATE,COMMENT_ADDED_DATE
    FROM AUDIT_INSIDENT_COMMENT_TBL
    WHERE MAIN_CASE_ID = I_main_case_id
    AND CHILD_CASE_ID = I_child_case_id
    AND INSIDENT_ID = I_incident_id ORDER BY COMMENT_ADDED_DATE DESC FETCH FIRST 1 ROWS ONLY;
    
    CURSOR SUB_CUR IS
    SELECT MAIN_CASE_ID,CHILD_CASE_ID,INSIDENT_ID, INSIDENT_COMMENT,AGREE_WITH_AUDIT,RESPONSIBLE_OFFICER,RECTIFIED,RECTIFY_DATE,TARGET_DATE,COMMENT_ADDED_DATE
    FROM AUDIT_INSIDENT_COMMENT_TBL
    WHERE MAIN_CASE_ID = I_main_case_id
   -- AND CHILD_CASE_ID = I_child_case_id
    AND INSIDENT_ID = I_incident_id ORDER BY COMMENT_ADDED_DATE DESC FETCH FIRST 1 ROWS ONLY;
    
    bcl BRANCH_COMMENT_TYPE_LIST;
    bc BRANCH_COMMENT_TYPE;
    
    BEGIN
    
    bcl:=NEW BRANCH_COMMENT_TYPE_LIST();
    IF(I_child_case_id = 0) THEN
    
      FOR SUB_CUR_REC IN SUB_CUR LOOP
      bc:= NEW  BRANCH_COMMENT_TYPE(0,'',0,null,null,null,0,0,0,null);
      
        bc.MAIN_CASE_ID := SUB_CUR_REC.MAIN_CASE_ID;
        bc.AGREE_WITH_AUDIT :=SUB_CUR_REC.AGREE_WITH_AUDIT;
        bc.RESPONSIBLE_OFFICER := SUB_CUR_REC.RESPONSIBLE_OFFICER;
        bc.RECTIFIED := SUB_CUR_REC.RECTIFIED;
        bc.RECTIFY_DATE := SUB_CUR_REC.RECTIFY_DATE;
        bc.TARGET_DATE := SUB_CUR_REC.TARGET_DATE;
        bc.COMMENT_ADDED_DATE := SUB_CUR_REC.COMMENT_ADDED_DATE;
        bc.CHILD_CASE_ID := SUB_CUR_REC.CHILD_CASE_ID;
        bc.INSIDENT_ID :=SUB_CUR_REC.INSIDENT_ID;
        bc.INSIDENT_COMMENT := SUB_CUR_REC.INSIDENT_COMMENT;
        
        bcl.EXTEND;
        bcl(bcl.LAST):=bc;
      END LOOP;
      ELSE
      FOR MAIN_CUR_REC IN MAIN_CUR LOOP
      bc:= NEW  BRANCH_COMMENT_TYPE(0,'',0,null,null,null,0,0,0,null);
      
        bc.MAIN_CASE_ID := MAIN_CUR_REC.MAIN_CASE_ID;
        bc.AGREE_WITH_AUDIT :=MAIN_CUR_REC.AGREE_WITH_AUDIT;
        bc.RESPONSIBLE_OFFICER := MAIN_CUR_REC.RESPONSIBLE_OFFICER;
        bc.RECTIFIED := MAIN_CUR_REC.RECTIFIED;
        bc.RECTIFY_DATE := MAIN_CUR_REC.RECTIFY_DATE;
        bc.TARGET_DATE := MAIN_CUR_REC.TARGET_DATE;
        bc.COMMENT_ADDED_DATE := MAIN_CUR_REC.COMMENT_ADDED_DATE;
        bc.CHILD_CASE_ID := MAIN_CUR_REC.CHILD_CASE_ID;
        bc.INSIDENT_ID :=MAIN_CUR_REC.INSIDENT_ID;
        bc.INSIDENT_COMMENT := MAIN_CUR_REC.INSIDENT_COMMENT;
        
        bcl.EXTEND;
        bcl(bcl.LAST):=bc;
      END LOOP;
      
      END IF;
  
  RETURN bcl;
  END GET_BRANCH_COMMENT_DETAILS;
  
  
------------------------------------------------------------------------------
--GET_INCIDENT_LIST_BY_CHILD_CASE_ID_USER_ID

FUNCTION GET_INCIDENT_LIST_BY_CHILD_CASE_ID_USER_ID (I_main_case_id IN NUMBER, I_child_case_id IN NUMBER, I_current_assigned_user IN VARCHAR2) RETURN AUDIT_INSIDENT_TYPE_LIST AS
    CURSOR MAIN_CUR IS 
    SELECT i.MAIN_CASE_ID,
        i.CHILD_CASE_ID, 
        i.INCIDENT_ID  , 
        i.AUDIT_STATUS , 
        i.IMPACT , 
        i.LIKELIHOOD , 
        i.OVERALL_RISK , 
        i.SAMPLE_COUNT , 
        i.ISSUE_COUNT , 
        i.POTENTIAL_IMPACT, 
        i.RECOMMENDATION , 
        i.ROOT_CAUSE , 
        i.DETAILS_ROOT_CAUSE , 
        i.AGREE_WITH_AUDIT, 
        i.RESPONSIBLE_OFFICER , 
        i.RECTIFIED , 
        i.RECTIFY_DATE , 
        i.COMMENT_HEADING ,	 
        i.LAST_NODE1 , 
        i.LAST_NODE_ORDER1 , 
        i.LAST_NODE2 , 
        i.LAST_NODE_ORDER2 , 
        i.LAST_NODE3 , 
        i.LAST_NODE_ORDER3 , 
        i.LAST_NODE4 , 
        i.LAST_NODE_ORDER4 , 
        i.LAST_NODE5 , 
        i.LAST_NODE_ORDER5 , 
        i.INCIDENT_CREATED_USER , 
        i.INCIDENT_CURRENT_ASSIGNED_USER , 
        i.INCIDENT_CREATED_DIV , 
        i.INCIDENT_CURRENT_ASSIGNED_DIV , 
        i.HR , 
        i.POLICIES_AND_PROCEDURE , 
        i.PROCESS_AND_EXECUTION , 
        i.IT,
        i.PERFORMANCE_MEASUREMENT,
        i.INCIDENT_COMMENT,
        i.BR_COMMENT_FLAG,
        i.LAST_NODE_ID,
        i.LAST_NODE_ELEMENT_ORDER,
        i.OVERALL_INCIDENT_STATUS,
        i.FOLLOW_UP_RECTIFIED,
        i.FOLLOW_UP_RECTIFIED_DATE,
        i.FOLLOW_UP_TARGET_DATE,
        i.FOLLOW_UP_RESPONSIBLE_OFFICER,
        i.BR_COMMENT,
        i.FUR_COMMENT,
        i.FOLLOW_UP_COMMENT,
        i.TARGET_DATE,
        c.CASE_CREATED_USER,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE1 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER1 ) AS LAST_NODE1_DESC, 
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE2 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER2 ) AS LAST_NODE2_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE3 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER3 ) AS LAST_NODE3_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE4 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER4 ) AS LAST_NODE4_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE5 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER5 ) AS LAST_NODE5_DESC
        from AUDIT_INCIDENT_TBL i , AUDIT_CASE_TBL c
       where i.MAIN_CASE_ID =I_main_case_id AND i.MAIN_CASE_ID = c.DOC_CASE_ID AND i.INCIDENT_CURRENT_ASSIGNED_USER = I_current_assigned_user AND i.DEL_FLAG=0;
       
       CURSOR ALL_INCI_CUR1 IS 
        SELECT i.MAIN_CASE_ID,
        i.CHILD_CASE_ID, 
        i.INCIDENT_ID  , 
        i.AUDIT_STATUS , 
        i.IMPACT , 
        i.LIKELIHOOD , 
        i.OVERALL_RISK , 
        i.SAMPLE_COUNT , 
        i.ISSUE_COUNT , 
        i.POTENTIAL_IMPACT, 
        i.RECOMMENDATION , 
        i.ROOT_CAUSE , 
        i.DETAILS_ROOT_CAUSE , 
        i.AGREE_WITH_AUDIT, 
        i.RESPONSIBLE_OFFICER , 
        i.RECTIFIED , 
        i.RECTIFY_DATE , 
        i.COMMENT_HEADING ,	 
        i.LAST_NODE1 , 
        i.LAST_NODE_ORDER1 , 
        i.LAST_NODE2 , 
        i.LAST_NODE_ORDER2 , 
        i.LAST_NODE3 , 
        i.LAST_NODE_ORDER3 , 
        i.LAST_NODE4 , 
        i.LAST_NODE_ORDER4 , 
        i.LAST_NODE5 , 
        i.LAST_NODE_ORDER5 , 
        i.INCIDENT_CREATED_USER , 
        i.INCIDENT_CURRENT_ASSIGNED_USER , 
        i.INCIDENT_CREATED_DIV , 
        i.INCIDENT_CURRENT_ASSIGNED_DIV , 
        i.HR , 
        i.POLICIES_AND_PROCEDURE , 
        i.PROCESS_AND_EXECUTION , 
        i.IT,
        i.PERFORMANCE_MEASUREMENT,
        i.INCIDENT_COMMENT,
        i.BR_COMMENT_FLAG,
        i.LAST_NODE_ID,
        i.LAST_NODE_ELEMENT_ORDER,
        i.OVERALL_INCIDENT_STATUS,
        i.FOLLOW_UP_RECTIFIED,
        i.FOLLOW_UP_RECTIFIED_DATE,
        i.FOLLOW_UP_TARGET_DATE,
        i.FOLLOW_UP_RESPONSIBLE_OFFICER,
        i.BR_COMMENT,
        i.FUR_COMMENT,
        i.FOLLOW_UP_COMMENT,
        i.TARGET_DATE,
        c.CASE_CREATED_USER,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE1 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER1 ) AS LAST_NODE1_DESC, 
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE2 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER2 ) AS LAST_NODE2_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE3 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER3 ) AS LAST_NODE3_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE4 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER4 ) AS LAST_NODE4_DESC,
        (SELECT c.NODE_DESCRIPTION from AUDIT_CHECK_LIST_TBL c where c.NODE_ID = i.LAST_NODE5 
        AND c.NODE_ELEMENT_ORDER = i.LAST_NODE_ORDER5 ) AS LAST_NODE5_DESC
        from AUDIT_INCIDENT_TBL i , AUDIT_CASE_TBL c 
       where i.MAIN_CASE_ID =I_main_case_id and i.CHILD_CASE_ID = I_child_case_id AND i.MAIN_CASE_ID = c.DOC_CASE_ID AND i.INCIDENT_CURRENT_ASSIGNED_USER = I_current_assigned_user AND i.DEL_FLAG=0;
        
    AUDIT_INSIDENT_LIST AUDIT_INSIDENT_TYPE_LIST;
    AUDIT_INSIDENT AUDIT_INSIDENT_TYPE;
  BEGIN
      AUDIT_INSIDENT_LIST:=NEW AUDIT_INSIDENT_TYPE_LIST();
      IF(I_child_case_id = 0) THEN
        FOR MAIN_CUR_REC IN MAIN_CUR LOOP
        AUDIT_INSIDENT:= NEW  AUDIT_INSIDENT_TYPE(0,0,0,'','','','',0,0,'','','','',0,'',0,null,'',null,'','','','','','', '','','','','','',	'',	'',	0,0,0,0,0,'','','','','','',0,'','','',0,null,null,'',null,null,null,null,0.0);
        
        AUDIT_INSIDENT.MAIN_CASE_ID := MAIN_CUR_REC.MAIN_CASE_ID;
        AUDIT_INSIDENT.CHILD_CASE_ID := MAIN_CUR_REC.CHILD_CASE_ID;
        AUDIT_INSIDENT.INCIDENT_ID:=MAIN_CUR_REC.INCIDENT_ID;
        AUDIT_INSIDENT.AUDIT_STATUS:=MAIN_CUR_REC.AUDIT_STATUS;
        AUDIT_INSIDENT.IMPACT:=MAIN_CUR_REC.IMPACT;
        AUDIT_INSIDENT.LIKELIHOOD:=MAIN_CUR_REC.LIKELIHOOD;
        AUDIT_INSIDENT.OVERALL_RISK:=MAIN_CUR_REC.OVERALL_RISK;
        AUDIT_INSIDENT.SAMPLE_COUNT:=MAIN_CUR_REC.SAMPLE_COUNT;
        AUDIT_INSIDENT.ISSUE_COUNT:=MAIN_CUR_REC.ISSUE_COUNT;
        AUDIT_INSIDENT.POTENTIAL_IMPACT:=MAIN_CUR_REC.POTENTIAL_IMPACT;
        AUDIT_INSIDENT.RECOMMENDATION:=MAIN_CUR_REC.RECOMMENDATION;
        AUDIT_INSIDENT.ROOT_CAUSE:=MAIN_CUR_REC.ROOT_CAUSE;
        AUDIT_INSIDENT.DETAILS_ROOT_CAUSE:=MAIN_CUR_REC.DETAILS_ROOT_CAUSE;
        AUDIT_INSIDENT.AGREE_WITH_AUDIT:=MAIN_CUR_REC.AGREE_WITH_AUDIT;
        AUDIT_INSIDENT.RESPONSIBLE_OFFICER:=MAIN_CUR_REC.RESPONSIBLE_OFFICER;
        AUDIT_INSIDENT.RECTIFIED:=MAIN_CUR_REC.RECTIFIED;
        AUDIT_INSIDENT.RECTIFY_DATE:=MAIN_CUR_REC.RECTIFY_DATE;
        AUDIT_INSIDENT.COMMENT_HEADING:=MAIN_CUR_REC.COMMENT_HEADING;
        AUDIT_INSIDENT.LAST_NODE1:=MAIN_CUR_REC.LAST_NODE1;
        AUDIT_INSIDENT.LAST_NODE2:=MAIN_CUR_REC.LAST_NODE2;
        AUDIT_INSIDENT.LAST_NODE3:=MAIN_CUR_REC.LAST_NODE3;
        AUDIT_INSIDENT.LAST_NODE4:=MAIN_CUR_REC.LAST_NODE4;
        AUDIT_INSIDENT.LAST_NODE5:=MAIN_CUR_REC.LAST_NODE5;
        AUDIT_INSIDENT.LAST_NODE_ORDER1:=MAIN_CUR_REC.LAST_NODE_ORDER1;
        AUDIT_INSIDENT.LAST_NODE_ORDER2:=MAIN_CUR_REC.LAST_NODE_ORDER2;
        AUDIT_INSIDENT.LAST_NODE_ORDER3:=MAIN_CUR_REC.LAST_NODE_ORDER3;
        AUDIT_INSIDENT.LAST_NODE_ORDER4:=MAIN_CUR_REC.LAST_NODE_ORDER4;
        AUDIT_INSIDENT.LAST_NODE_ORDER5:=MAIN_CUR_REC.LAST_NODE_ORDER5;
        AUDIT_INSIDENT.INCIDENT_CREATED_USER:=MAIN_CUR_REC.INCIDENT_CREATED_USER;
        AUDIT_INSIDENT.INCIDENT_CURRENT_ASSIGNED_USER:=MAIN_CUR_REC.INCIDENT_CURRENT_ASSIGNED_USER;
        AUDIT_INSIDENT.INCIDENT_CREATED_DIV:=MAIN_CUR_REC.INCIDENT_CREATED_DIV;
        AUDIT_INSIDENT.INCIDENT_CURRENT_ASSIGNED_DIV:=MAIN_CUR_REC.INCIDENT_CURRENT_ASSIGNED_DIV;
        AUDIT_INSIDENT.HR:=MAIN_CUR_REC.HR;
        AUDIT_INSIDENT.POLICIES_AND_PROCEDURE:=MAIN_CUR_REC.POLICIES_AND_PROCEDURE;
        AUDIT_INSIDENT.PROCESS_AND_EXECUTION:=MAIN_CUR_REC.PROCESS_AND_EXECUTION;
        AUDIT_INSIDENT.IT:=MAIN_CUR_REC.IT;
        AUDIT_INSIDENT.PERFORMANCE_MEASUREMENT:=MAIN_CUR_REC.PERFORMANCE_MEASUREMENT;
        AUDIT_INSIDENT.NODE_DESCRIPTION1 := MAIN_CUR_REC.LAST_NODE1_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION2 := MAIN_CUR_REC.LAST_NODE2_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION3 := MAIN_CUR_REC.LAST_NODE3_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION4 := MAIN_CUR_REC.LAST_NODE4_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION5 := MAIN_CUR_REC.LAST_NODE5_DESC;
        AUDIT_INSIDENT.INCIDENT_COMMENT := MAIN_CUR_REC.INCIDENT_COMMENT;
        AUDIT_INSIDENT.CASE_CREATED_USER := MAIN_CUR_REC.CASE_CREATED_USER;
        AUDIT_INSIDENT.BR_COMMENT_FLAG := MAIN_CUR_REC.BR_COMMENT_FLAG;
        AUDIT_INSIDENT.LAST_NODE_ID := MAIN_CUR_REC.LAST_NODE_ID;
        AUDIT_INSIDENT.LAST_NODE_ELEMENT_ORDER := MAIN_CUR_REC.LAST_NODE_ELEMENT_ORDER;
        AUDIT_INSIDENT.OVERALL_INCIDENT_STATUS:=MAIN_CUR_REC.OVERALL_INCIDENT_STATUS;
        
        AUDIT_INSIDENT.TARGET_DATE:=MAIN_CUR_REC.TARGET_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_RECTIFIED:=MAIN_CUR_REC.FOLLOW_UP_RECTIFIED;
        AUDIT_INSIDENT.FOLLOW_UP_RECTIFIED_DATE:=MAIN_CUR_REC.FOLLOW_UP_RECTIFIED_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_TARGET_DATE:=MAIN_CUR_REC.FOLLOW_UP_TARGET_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_RESPONSIBLE_OFFICER:=MAIN_CUR_REC.FOLLOW_UP_RESPONSIBLE_OFFICER;
        AUDIT_INSIDENT.BR_COMMENT:=MAIN_CUR_REC.BR_COMMENT;
        AUDIT_INSIDENT.FUR_COMMENT:=MAIN_CUR_REC.FUR_COMMENT;
        AUDIT_INSIDENT.FOLLOW_UP_COMMENT:=MAIN_CUR_REC.FOLLOW_UP_COMMENT;
        
        AUDIT_INSIDENT_LIST.EXTEND;
        AUDIT_INSIDENT_LIST(AUDIT_INSIDENT_LIST.LAST):=AUDIT_INSIDENT;
      END LOOP;
      
      ELSE
        FOR ALL_INCI_CUR_REC1 IN ALL_INCI_CUR1 LOOP
        AUDIT_INSIDENT:= NEW  AUDIT_INSIDENT_TYPE(0,0,0,'','','','',0,0,'','','','',0,'',0,null,'',null,'','','','','','', '','','','','','',	'',	'',	0,0,0,0,0,'','','','','','',0,'','','',0,null,null,'',null,null,null,null,0.0);
        
        AUDIT_INSIDENT.MAIN_CASE_ID := ALL_INCI_CUR_REC1.MAIN_CASE_ID;
        AUDIT_INSIDENT.CHILD_CASE_ID := ALL_INCI_CUR_REC1.CHILD_CASE_ID;
        AUDIT_INSIDENT.INCIDENT_ID:=ALL_INCI_CUR_REC1.INCIDENT_ID;
        AUDIT_INSIDENT.AUDIT_STATUS:=ALL_INCI_CUR_REC1.AUDIT_STATUS;
        AUDIT_INSIDENT.IMPACT:=ALL_INCI_CUR_REC1.IMPACT;
        AUDIT_INSIDENT.LIKELIHOOD:=ALL_INCI_CUR_REC1.LIKELIHOOD;
        AUDIT_INSIDENT.OVERALL_RISK:=ALL_INCI_CUR_REC1.OVERALL_RISK;
        AUDIT_INSIDENT.SAMPLE_COUNT:=ALL_INCI_CUR_REC1.SAMPLE_COUNT;
        AUDIT_INSIDENT.ISSUE_COUNT:=ALL_INCI_CUR_REC1.ISSUE_COUNT;
        AUDIT_INSIDENT.POTENTIAL_IMPACT:=ALL_INCI_CUR_REC1.POTENTIAL_IMPACT;
        AUDIT_INSIDENT.RECOMMENDATION:=ALL_INCI_CUR_REC1.RECOMMENDATION;
        AUDIT_INSIDENT.ROOT_CAUSE:=ALL_INCI_CUR_REC1.ROOT_CAUSE;
        AUDIT_INSIDENT.DETAILS_ROOT_CAUSE:=ALL_INCI_CUR_REC1.DETAILS_ROOT_CAUSE;
        AUDIT_INSIDENT.AGREE_WITH_AUDIT:=ALL_INCI_CUR_REC1.AGREE_WITH_AUDIT;
        AUDIT_INSIDENT.RESPONSIBLE_OFFICER:=ALL_INCI_CUR_REC1.RESPONSIBLE_OFFICER;
        AUDIT_INSIDENT.RECTIFIED:=ALL_INCI_CUR_REC1.RECTIFIED;
        AUDIT_INSIDENT.RECTIFY_DATE:=ALL_INCI_CUR_REC1.RECTIFY_DATE;
        AUDIT_INSIDENT.COMMENT_HEADING:=ALL_INCI_CUR_REC1.COMMENT_HEADING;
        AUDIT_INSIDENT.LAST_NODE1:=ALL_INCI_CUR_REC1.LAST_NODE1;
        AUDIT_INSIDENT.LAST_NODE2:=ALL_INCI_CUR_REC1.LAST_NODE2;
        AUDIT_INSIDENT.LAST_NODE3:=ALL_INCI_CUR_REC1.LAST_NODE3;
        AUDIT_INSIDENT.LAST_NODE4:=ALL_INCI_CUR_REC1.LAST_NODE4;
        AUDIT_INSIDENT.LAST_NODE5:=ALL_INCI_CUR_REC1.LAST_NODE5;
        AUDIT_INSIDENT.LAST_NODE_ORDER1:=ALL_INCI_CUR_REC1.LAST_NODE_ORDER1;
        AUDIT_INSIDENT.LAST_NODE_ORDER2:=ALL_INCI_CUR_REC1.LAST_NODE_ORDER2;
        AUDIT_INSIDENT.LAST_NODE_ORDER3:=ALL_INCI_CUR_REC1.LAST_NODE_ORDER3;
        AUDIT_INSIDENT.LAST_NODE_ORDER4:=ALL_INCI_CUR_REC1.LAST_NODE_ORDER4;
        AUDIT_INSIDENT.LAST_NODE_ORDER5:=ALL_INCI_CUR_REC1.LAST_NODE_ORDER5;
        AUDIT_INSIDENT.INCIDENT_CREATED_USER:=ALL_INCI_CUR_REC1.INCIDENT_CREATED_USER;
        AUDIT_INSIDENT.INCIDENT_CURRENT_ASSIGNED_USER:=ALL_INCI_CUR_REC1.INCIDENT_CURRENT_ASSIGNED_USER;
        AUDIT_INSIDENT.INCIDENT_CREATED_DIV:=ALL_INCI_CUR_REC1.INCIDENT_CREATED_DIV;
        AUDIT_INSIDENT.INCIDENT_CURRENT_ASSIGNED_DIV:=ALL_INCI_CUR_REC1.INCIDENT_CURRENT_ASSIGNED_DIV;
        AUDIT_INSIDENT.HR:=ALL_INCI_CUR_REC1.HR;
        AUDIT_INSIDENT.POLICIES_AND_PROCEDURE:=ALL_INCI_CUR_REC1.POLICIES_AND_PROCEDURE;
        AUDIT_INSIDENT.PROCESS_AND_EXECUTION:=ALL_INCI_CUR_REC1.PROCESS_AND_EXECUTION;
        AUDIT_INSIDENT.IT:=ALL_INCI_CUR_REC1.IT;
        AUDIT_INSIDENT.PERFORMANCE_MEASUREMENT:=ALL_INCI_CUR_REC1.PERFORMANCE_MEASUREMENT;
        AUDIT_INSIDENT.NODE_DESCRIPTION1 := ALL_INCI_CUR_REC1.LAST_NODE1_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION2 := ALL_INCI_CUR_REC1.LAST_NODE2_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION3 := ALL_INCI_CUR_REC1.LAST_NODE3_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION4 := ALL_INCI_CUR_REC1.LAST_NODE4_DESC;
        AUDIT_INSIDENT.NODE_DESCRIPTION5 := ALL_INCI_CUR_REC1.LAST_NODE5_DESC;
        AUDIT_INSIDENT.INCIDENT_COMMENT := ALL_INCI_CUR_REC1.INCIDENT_COMMENT;
        AUDIT_INSIDENT.CASE_CREATED_USER := ALL_INCI_CUR_REC1.CASE_CREATED_USER;
        AUDIT_INSIDENT.BR_COMMENT_FLAG := ALL_INCI_CUR_REC1.BR_COMMENT_FLAG;
        AUDIT_INSIDENT.LAST_NODE_ID := ALL_INCI_CUR_REC1.LAST_NODE_ID;
        AUDIT_INSIDENT.LAST_NODE_ELEMENT_ORDER := ALL_INCI_CUR_REC1.LAST_NODE_ELEMENT_ORDER;
        AUDIT_INSIDENT.OVERALL_INCIDENT_STATUS:=ALL_INCI_CUR_REC1.OVERALL_INCIDENT_STATUS;
        
        AUDIT_INSIDENT.TARGET_DATE:=ALL_INCI_CUR_REC1.TARGET_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_RECTIFIED:=ALL_INCI_CUR_REC1.FOLLOW_UP_RECTIFIED;
        AUDIT_INSIDENT.FOLLOW_UP_RECTIFIED_DATE:=ALL_INCI_CUR_REC1.FOLLOW_UP_RECTIFIED_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_TARGET_DATE:=ALL_INCI_CUR_REC1.FOLLOW_UP_TARGET_DATE;
        AUDIT_INSIDENT.FOLLOW_UP_RESPONSIBLE_OFFICER:=ALL_INCI_CUR_REC1.FOLLOW_UP_RESPONSIBLE_OFFICER;
        AUDIT_INSIDENT.BR_COMMENT:=ALL_INCI_CUR_REC1.BR_COMMENT;
        AUDIT_INSIDENT.FUR_COMMENT:=ALL_INCI_CUR_REC1.FUR_COMMENT;
        AUDIT_INSIDENT.FOLLOW_UP_COMMENT:=ALL_INCI_CUR_REC1.FOLLOW_UP_COMMENT;
        
        AUDIT_INSIDENT_LIST.EXTEND;
        AUDIT_INSIDENT_LIST(AUDIT_INSIDENT_LIST.LAST):=AUDIT_INSIDENT;
      END LOOP;
      END IF;
      
    
    RETURN AUDIT_INSIDENT_LIST;
  END GET_INCIDENT_LIST_BY_CHILD_CASE_ID_USER_ID;
------------------------------------------------------------------------
--FUNCTION UPDATE_FOLLOW_ACTION_DATA(follow_up_rectified IN VARCHAR2, follow_up_rec_date IN VARCHAR2,follow_up_target_date IN VARCHAR2,follow_up_res_officer IN VARCHAR2, incident_id IN NUMBER)RETURN VARCHAR2
--FUNCTION UPDATE_FOLLOW_ACTION_DATA(f_rectified IN NUMBER, f_rec_date IN VARCHAR2,f_target_date IN VARCHAR2,f_res_officer IN VARCHAR2, i_id IN NUMBER)RETURN VARCHAR2 AS
--  status_of_updation VARCHAR2(10); 
--BEGIN
--
--  UPDATE AUDIT_INCIDENT_TBL
--  SET
--     FOLLOW_UP_RECTIFIED = f_rectified,
--     FOLLOW_UP_RECTIFIED_DATE = TO_TIMESTAMP(f_rec_date),
--     FOLLOW_UP_TARGET_DATE = TO_TIMESTAMP(f_target_date),
--     FOLLOW_UP_RESPONSIBLE_OFFICER= f_res_officer 
--  WHERE
--     INCIDENT_ID = i_id;
--     --commit;
--   dbms_output.put_line('Sucessfully 123 : - ' || sql%rowcount);
--    if sql%rowcount > 0 then
--   dbms_output.put_line('Sucessfully INSERT : - ');
--   commit;
--    status_of_updation := 'SUCESS'; 
--   ELSE
--   dbms_output.put_line('Sucessfully FAIL : - '  );
--   status_of_updation := 'FAIL';
--  end if;
--
--RETURN status_of_updation;
--END UPDATE_FOLLOW_ACTION_DATA;

FUNCTION UPDATE_AUDIT_INCIDENT(
    p_rectified IN AUDIT_INCIDENT_TBL.FOLLOW_UP_RECTIFIED%TYPE,
    p_rectified_date IN VARCHAR2,
    p_target_date IN VARCHAR2,
    p_responsible_officer IN AUDIT_INCIDENT_TBL.FOLLOW_UP_RESPONSIBLE_OFFICER%TYPE,
    p_br_comment IN AUDIT_INCIDENT_TBL.BR_COMMENT%TYPE,
    p_incident_id IN AUDIT_INCIDENT_TBL.INCIDENT_ID%TYPE
) RETURN VARCHAR2 AS 
    status_reply VARCHAR2(50) := '';
BEGIN
    UPDATE AUDIT_INCIDENT_TBL 
    SET BR_COMMENT_FLAG=1,
        FOLLOW_UP_RECTIFIED = p_rectified,
        FOLLOW_UP_RECTIFIED_DATE = TO_TIMESTAMP(p_rectified_date), -- Assuming the format
        FOLLOW_UP_TARGET_DATE = TO_TIMESTAMP(p_target_date), -- Assuming the format
        FOLLOW_UP_RESPONSIBLE_OFFICER = p_responsible_officer,
        FOLLOW_UP_COMMENT = p_br_comment
    WHERE INCIDENT_ID = p_incident_id;

    dbms_output.put_line('Update operation attempted on ' || sql%rowcount || ' rows.');

    IF sql%rowcount > 0 THEN
        dbms_output.put_line('Successfully updated.');
        COMMIT;
        status_reply := 'SUCCESS';
    ELSE
        dbms_output.put_line('Update failed.');
        status_reply := 'FAILS';
    END IF;

    RETURN status_reply;
END UPDATE_AUDIT_INCIDENT;
  
FUNCTION UPDATE_AUDIT_INCIDENT_BR(
    P_agreed_with_audit IN AUDIT_INCIDENT_TBL.AGREE_WITH_AUDIT%TYPE,
    p_rectified IN AUDIT_INCIDENT_TBL.FOLLOW_UP_RECTIFIED%TYPE,
    p_rectified_date IN VARCHAR2,
    p_target_date IN VARCHAR2,
    p_responsible_officer IN AUDIT_INCIDENT_TBL.FOLLOW_UP_RESPONSIBLE_OFFICER%TYPE,
    p_br_comment IN AUDIT_INCIDENT_TBL.BR_COMMENT%TYPE,
    p_incident_id IN AUDIT_INCIDENT_TBL.INCIDENT_ID%TYPE
) RETURN VARCHAR2 AS 
    status_reply VARCHAR2(50) := '';
BEGIN
    UPDATE AUDIT_INCIDENT_TBL 
    SET BR_COMMENT_FLAG=1,
        AGREE_WITH_AUDIT=P_agreed_with_audit,
        RECTIFIED  = p_rectified,
        RECTIFY_DATE = TO_TIMESTAMP(p_rectified_date), -- Assuming the format
        TARGET_DATE = TO_TIMESTAMP(p_target_date), -- Assuming the format
        RESPONSIBLE_OFFICER = p_responsible_officer,
        BR_COMMENT = p_br_comment
    WHERE INCIDENT_ID = p_incident_id;

    dbms_output.put_line('Update operation attempted on ' || sql%rowcount || ' rows.');

    IF sql%rowcount > 0 THEN
        dbms_output.put_line('Successfully updated.');
        COMMIT;
        status_reply := 'SUCCESS';
    ELSE
        dbms_output.put_line('Update failed.');
        status_reply := 'FAILS';
    END IF;

    RETURN status_reply;
END UPDATE_AUDIT_INCIDENT_BR;
  
END INSIDENT_LIST_PACK;
/